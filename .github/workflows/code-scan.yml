name: CodeGuru Security Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * 0'  # Weekly on Sundays at midnight

jobs:
  security-scan:
    name: CodeGuru Security Scan
    runs-on: ubuntu-latest
    
    permissions:
      id-token: write  # Required for OIDC authentication
      contents: read   # Required to check out code
      security-events: write  # Required for uploading results
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::362631904613:role/GitHubOIDCRoleCodeGuru
          aws-region: us-east-2
      
      - name: Run CodeGuru Security Scan
        run: |
          SCAN_NAME="security-scan-${GITHUB_SHA::8}"
          REPOSITORY_NAME="${GITHUB_REPOSITORY#*/}"
          
          # Create the scan
          SCAN_ARN=$(aws codeguru-security create-scan \
            --name "$SCAN_NAME" \
            --analysis-type "Security" \
            --repository-name "$REPOSITORY_NAME" \
            --branch "${GITHUB_REF_NAME}" \
            --output json | jq -r '.arn')
          
          echo "Scan ARN: $SCAN_ARN"
          echo "Waiting for scan to complete (this may take several minutes)..."
          
          # Wait for scan to complete
          aws codeguru-security get-scan --arn "$SCAN_ARN" --output json | \
            jq -r '.status' | \
            while read -r status; do
              if [ "$status" = "Completed" ]; then
                break
              elif [ "$status" = "Failed" ]; then
                echo "Scan failed"
                exit 1
              else
                echo "Scan status: $status"
                sleep 60
              fi
            done
          
          # Get scan results
          aws codeguru-security get-findings \
            --scan-arn "$SCAN_ARN" \
            --output json > codeguru-findings.json
          
          # Display summary of findings
          CRITICAL=$(jq '.findings[] | select(.severity=="Critical") | .id' codeguru-findings.json | wc -l)
          HIGH=$(jq '.findings[] | select(.severity=="High") | .id' codeguru-findings.json | wc -l)
          MEDIUM=$(jq '.findings[] | select(.severity=="Medium") | .id' codeguru-findings.json | wc -l)
          
          echo "CodeGuru Security Scan Results:"
          echo "Critical: $CRITICAL"
          echo "High: $HIGH"
          echo "Medium: $MEDIUM"
          
          # Optional: Fail the workflow if critical findings exist
          if [ $CRITICAL -gt 0 ]; then
            echo "Critical security findings detected!"
            exit 1
          fi
